#运行选择配置
spring.profiles.active=@spring.profiles.active@
#日志
#logging.config=classpath:logback.xml
#logging.level.com.mlk=debug
# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=8
spring.datasource.minIdle=3
spring.datasource.maxActive=200
# 配置获取连接等待超时的时间
spring.datasource.maxWait=10000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=3000
# 配置一个连接在池中最小生存的时间，单位是毫秒  
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
#关闭长时间不使用的连接 
#打开removeAbandoned功能 
spring.datasource.removeAbandoned=true
#5分钟
spring.datasource.removeAbandonedTimeout=300
#关闭abanded连接时输出错误日志
spring.datasource.logAbandoned=true
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 ,config.decrypt用来解密密码
spring.datasource.filters=stat,wall,log4j,config
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

# AOP
spring.aop.auto=true  
spring.aop.proxy-target-class=true 

#多数据源配置



